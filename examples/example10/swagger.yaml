swagger: "2.0"
info:
  description: "Tests the REST API of example06"
  title: "example06_test"
  version: "v1"
host: "192.168.0.101:8080"
basePath: /
paths:
  /employees:
    get:
      summary: "Get all employees"
      responses:
        "200":
          description: "Success response"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int64"
                  example: 1
                name:
                  type: "string"
                  example: "Bilbo Baggins"
                role:
                  type: "string"
                  example: "burglar"
    post:
      summary: "Add a new employee"
      parameters:
      - in: "body"
        name: "body"
        description: "Employee object that needs to be added"
        required: true
        schema:
          type: "object"
          required:
          - "name"
          - "role"
          properties:
            name:
              type: "string"
              example: "Tom Turbo"
            role:
              type: "string"
              example: "detective"
          xml:
            name: "Employee"
      responses:
        "200":
          description: "Success response"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
                example: 3
              name:
                type: "string"
                example: "Tom Turbo"
              role:
                type: "string"
                example: "detective"
  /employees/{id}:
    get:
      summary: "Get one employee"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Success response"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
                example: 1
              name:
                type: "string"
                example: "Bilbo Baggins"
              role:
                type: "string"
                example: "burglar"
    put:
      summary: "Update an existing employee"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of employee to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Employee data that are updated"
        required: true
        schema:
          type: "object"
          required:
          - "id"
          - "name"
          - "role"
          properties:
            name:
              type: "string"
              example: "Max Max"
            role:
              type: "string"
              example: "replacement"
          xml:
            name: "Employee"
      responses:
        "200":
          description: "Success response"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
                example: 0
              name:
                type: "string"
                example: "Mad Max"
              role:
                type: "string"
                example: "replacement"
    delete:
      summary: "Deletes an employee"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of employee to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Success response"
        "500":
          description: "Error"
